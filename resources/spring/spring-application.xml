<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:cache="http://www.springframework.org/schema/cache"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/cache  
        	http://www.springframework.org/schema/cache/spring-cache-3.2.xsd  
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	
	 <!-- Spring所有的配置文件的的变量通过properties注入 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties" ref="applicationPropertiesFactoryBean"/>
    </bean>
    
    <!-- 校验码配置 -->
     <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha"> 
     	<property name="config">  
            <bean class="com.google.code.kaptcha.util.Config">  
                <constructor-arg>  
                    <props>  
                        <prop key="kaptcha.border">${kaptcha.border}</prop>  
                        <prop key="kaptcha.border.color">${kaptcha.border.color}</prop>  
                        <prop key="kaptcha.textproducer.font.color">${kaptcha.textproducer.font.color}</prop>  
                        <prop key="kaptcha.image.width">${kaptcha.image.width}</prop>  
                        <prop key="kaptcha.image.height">${kaptcha.image.height}</prop>  
                        <prop key="kaptcha.textproducer.font.size">${kaptcha.textproducer.font.size}</prop>  
                        <prop key="kaptcha.session.key">${kaptcha.session.key}</prop>  
                        <prop key="kaptcha.textproducer.char.length">${kaptcha.textproducer.char.length}</prop>  
                        <prop key="kaptcha.textproducer.font.names">${kaptcha.textproducer.font.names}</prop>  
                        <prop key="kaptcha.textproducer.char.string">${kaptcha.textproducer.char.string}</prop>  
                    </props>  
                </constructor-arg>  
            </bean>  
        </property>   
     </bean>
     
     
	<!-- 缓存配置   -->
 <!-- 	<cache:annotation-driven cache-manager="cacheManager"/>   -->
    
	<!--     Spring提供的基于的Ehcache实现的缓存管理器   -->
   <!--  <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <property name="configLocation" value="classpath:ehcache.xml"/>  
    </bean>  
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">  
        <property name="cacheManager" ref="cacheManagerFactory"/>  
    </bean> -->
 <!--    配置quartz任务调度器 -->
    <!--
    <bean id="systemLogRedisController" class="com.ucsmy.mc.util.log.SystemLogRedisController"/>
		<bean id="myScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="myTriggersA"></ref>
            </list>
        </property>
        <property name="autoStartup" value="true"></property>
    </bean>
     <bean id="myTriggersA"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="myJobDetailA">
        </property>
        <property name="cronExpression">
            <value>0 10 * * * ?</value>
        </property>
    </bean>
     <bean id="myJobDetailA"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="systemLogRedisController">
        </property>
        <property name="targetMethod" value="getSystemLogAndInsertSystemLogExtend"></property>
        <property name="concurrent" value="false" />
    </bean>-->
</beans>